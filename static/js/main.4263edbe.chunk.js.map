{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","sortCondition","setSortCondition","isReversed","setIsReversed","goods","condition","copyGoods","sort","good1","good2","localeCompare","length","reverse","sortByCondition","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,sBACtBC,EAAiB,iBAuBVC,EAAM,WACjB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAzBgB,SAACC,EAAWH,GAClC,IAAMI,EAAS,UAAOX,GAiBtB,OAfIU,GACFC,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQJ,GACN,KAAKT,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRT,EAAaI,EAAUM,UAAYN,EAO5BO,CAAgBb,EAAeE,GAE7C,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBE,IAAG,CAAE,WAAYhB,IAAkBJ,KAChEqB,QAAS,kBAAMhB,EAAiBL,IAHlC,iCAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CAAE,WAAYhB,IAAkBH,KACnEoB,QAAS,kBAAMhB,EAAiBJ,IAHlC,4BAQA,wBACEkB,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CAAE,YAAad,KAClDe,QAAS,kBAAMd,GAAeD,IAHhC,sBAQEF,GAAiBE,IAEf,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,GAAc,GACdF,EAAiB,KALrB,sBAcN,6BACGG,EAAMc,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC5FjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4263edbe.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'sort alphabetically';\nconst SORT_BY_LENGTH = 'sort by length';\n\nconst sortByCondition = (condition, isReversed) => {\n  const copyGoods = [...goodsFromServer];\n\n  if (condition) {\n    copyGoods.sort((good1, good2) => {\n      switch (condition) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? copyGoods.reverse() : copyGoods;\n};\n\nexport const App = () => {\n  const [sortCondition, setSortCondition] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = sortByCondition(sortCondition, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${cn({ 'is-light': sortCondition !== SORT_ALPHABETICALLY })}`}\n          onClick={() => setSortCondition(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortCondition !== SORT_BY_LENGTH })}`}\n          onClick={() => setSortCondition(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': !isReversed })}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortCondition || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setIsReversed(false);\n                setSortCondition('');\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}